keyword = @{ "fun" | "do" }
num = @{ "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
var = @{ !num ~ !keyword ~ (ASCII_ALPHANUMERIC | "_")+ }
sym = @{ (!(ASCII_ALPHANUMERIC | WHITESPACE | "(" | ")" | "\n" | "_"  | "." | "|" | "," | "=" | ":" | "$") ~ ANY)+ }
atom = _{ num | sym | var | paren }

tuple = { "," }
union = { "|" }
dot = { "." }
def = { !("=>") ~ "=" }
op = _{ tuple | union | dot | sym | var }

app = { "" }
close_paren = { ")" }
paren = _{ "(" ~ line ~ close_paren }

expr = _{ atom | indent ~ line ~ dedent }

node_a = _{ atom ~ (op ~ atom)* ~ op ~ indent ~ line ~ dedent }
node_b = _{ atom ~ (op ~ atom)* ~ app ~ indent ~ line ~ dedent }
node_c = _{ (node_a | node_d) ~ indent ~ op ~ expr ~ (samedent ~ op ~ expr)* ~ dedent }
node_d = _{ atom ~ (op ~ atom | app ~ atom)* }
line = { definition | fun | node_a | node_c | node_b | node_d }

definition = _{ node_d ~ def ~ line }

fun_pat = { node_d }
fun_arm = { fun_pat ~ "=>" ~ line }
fun = { "fun" ~ (fun_arm | indent ~ fun_arm ~ (samedent ~ fun_arm)* ~ dedent) }

prog = _{ SOI ~ "\n"* ~ (line ~ "\n"*)+ ~ EOI }

indent = @{ "\n"+ ~ PEEK[..] ~ PUSH(WHITESPACE+) }
dedent = @{ EOI | "\n"+ ~ !PEEK[..] ~ DROP }
samedent = @{ "\n"+ ~ PEEK[..] }

WHITESPACE = _{ " " }
